name: Setup Repository Labels

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/setup-labels.yml'
      - '.github/dependabot.yml'

permissions:
  issues: write
  contents: read

jobs:
  setup-labels:
    runs-on: ubuntu-latest
    name: Create Required Labels
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create or update labels
      uses: actions/github-script@v8
      with:
        script: |
          const labels = [
            {
              name: 'ci',
              color: '0052cc',
              description: 'Continuous Integration related changes'
            },
            {
              name: 'github-actions',
              color: '2088ff',
              description: 'GitHub Actions workflow updates'
            },
            {
              name: 'dependencies',
              color: '0366d6',
              description: 'Updates to project dependencies'
            },
            {
              name: 'composer',
              color: '885630',
              description: 'Composer dependency updates'
            }
          ];

          for (const label of labels) {
            try {
              // Try to get the existing label
              await github.rest.issues.getLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: label.name
              });
              
              // If label exists, update it
              await github.rest.issues.updateLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: label.name,
                color: label.color,
                description: label.description
              });
              
              console.log(`Updated existing label: ${label.name}`);
              
            } catch (error) {
              if (error.status === 404) {
                // Label doesn't exist, create it
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label.name,
                  color: label.color,
                  description: label.description
                });
                
                console.log(`Created new label: ${label.name}`);
              } else {
                console.error(`Error handling label ${label.name}:`, error);
                throw error;
              }
            }
          }

          console.log('All required labels have been processed successfully!');